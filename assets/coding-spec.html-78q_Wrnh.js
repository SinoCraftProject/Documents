import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as r,e as i,o as a}from"./app-uo9MBsQ2.js";const n={};function c(s,e){return a(),t("div",null,[e[0]||(e[0]=r('<h1 id="代码规范" tabindex="-1"><a class="header-anchor" href="#代码规范"><span>代码规范</span></a></h1><p>为规范模组开发过程，编制此文档。<br> 2023 年 12 月 20 日修订。</p><h2 id="命名风格" tabindex="-1"><a class="header-anchor" href="#命名风格"><span>命名风格</span></a></h2><ol><li><p><strong>【强制】</strong> 所有代码中的命名应当使用英文，除了一些专有名词没有英文对应翻译的。<br><em>正例：</em> <code>QingGui</code>（青珪，一种上尖下方的玉质礼器）<br><em>反例：</em> <code>ModWuPin</code>（模组物品）</p></li><li><p><strong>【强制】</strong> 所有的类命均使用 PascalCase（又称大驼峰、CapitalCamelCase 或 UpperCamelCase）风格。<br><em>正例：</em> <code>ModClass</code></p></li><li><p><strong>【强制】</strong> 所有的接口命名以大写字母 I 开头。<br><em>正例：</em> <code>IPlayerCapabilityHolder</code></p></li><li><p><strong>【强制】</strong> 在 API 中对外开放的抽象类命名以单词 Abstract 开头；在实现中的抽象类（不应被使用该 API 的类继承的）以 Base 结尾。<br><em>正例：</em> <code>AbstractBlockStateProvider</code>、<code>BlockStateProviderBase</code><br><em>反例：</em> <code>BaseBlockState</code></p></li><li><p><strong>【强制】</strong> 异常类命名以单词 Exception 结尾；测试类命名以要测试的类的名称开始，以单词 Test 结尾。</p></li><li><p><strong>【强制】</strong> 方法名、参数名、成员变量、局部变量的命名都统一使用 camelCase（又称小驼峰、lowerCamelCase）风格。<br><em>正例：</em> <code>paramValue</code>、<code>onUse()</code>、<code>serverId</code></p></li><li><p><strong>【强制】</strong> 常量命名均使用 MACRO_CASE（又称 CONSTANT_CASE 或 SCREAM_CASE）风格。</p></li><li><p><strong>【强制】</strong> 枚举类的成员命名同常量命名。</p></li><li><p><strong>【强制】</strong> 包名统一使用小写，点分隔符之间有且仅有一个英语单词（如果必须要两个及以上单词才能表达完整含义，使用 camelCase）。<br><em>说明：</em> 若专有名词不是一个英语单词，如模组 ModID、组织名称等，也视为一个单词。<br><em>正例：</em> <code>games.moegirl.sinocraft.sinocore</code>、<code>cx.rain.mc.icon_at_night</code></p></li><li><p><strong>【强制】</strong> 禁止使用不规范的英文缩写，如果难以找到合适的缩写，请使用完整的名称。<br><em>反例：</em> <code>Abstract</code> 缩写成 <code>Abs</code></p></li><li><p><strong>【推荐】</strong> 最外层包名采用域名反写的形式，项目所有者最好持有该域名。<br><em>说明：</em> 可能会用于避免潜在的版权问题。若是非 ASCII 的一级域名，请使用 Punycode 转换，包含横杠（又称连字符，-）的用下划线替代。</p></li><li><p><strong>【推荐】</strong> 在常量和变量命名时，表示其取值的性质的单词放在末尾，以增加可读性。<br><em>正例：</em> <code>startTime</code>、<code>playerList</code>、<code>MAX_THREAD_COUNT</code><br><em>反例：</em> <code>startAt</code>、<code>listPlayer</code>、<code>MAX_THREADS</code></p></li><li><p><strong>【推荐】</strong> 如果模块、类、接口、方法使用了设计模式，在命名时要体现出具体模式。<br><em>正例：</em> <code>StringDecorator</code>、<code>NmsFactory</code></p></li><li><p><strong>【强制】</strong> 模组中用于注册游戏内容的类命名以 Mod 或者模组 ID 的缩写开头，后接注册的游戏内容名称（如 Block、Item）。<br><em>正例：</em> <code>ModBlocks</code>、<code>SCItems</code></p></li><li><p><strong>【强制】</strong> 模组中的游戏内容类，命名应以游戏内容的名称结尾。<br><em>正例：</em> <code>KnifeItem</code>、<code>StoveBlock</code></p></li><li><p><strong>【强制】</strong> 模组中用于逻辑服务端和逻辑客户端通信的类命名以传输方向（S2C、C2S）开头，以 Packet 结尾。<br><em>正例：</em> <code>C2SSaveDrawingPacket</code></p></li><li><p><strong>【强制】</strong> 枚举类的命名以 Enum 结尾。</p></li></ol><h2 id="常量定义" tabindex="-1"><a class="header-anchor" href="#常量定义"><span>常量定义</span></a></h2><ol><li><p><strong>【强制】</strong> 使用类型和中括号紧邻的方式（Java 风格）定义数组。<br><em>正例：</em> <code>int[] intArray;</code><br><em>反例：</em> <code>String args[];</code></p></li><li><p><strong>【强制】</strong> 长整数类型的字面量，数值后使用大写的 L ，禁止使用小写的 l。<br> 说明：小写 l 在一些字体下容易和数字 1 混淆，造成误解。</p></li><li><p><strong>【强制】</strong> 浮点数类型的字面量，单精度的数值后面使用大写的 F ，双精度的数值后面不加 D（因为 Java 默认为双精度浮点数）。</p></li><li><p><strong>【强制】</strong> 当被调用方法的形参为浮点数类型，且实参恰好是整数的时候，不要额外加小数部分，让 Java 自动隐式转换。<br><em>正例：</em> <code>Box.shape(1, 1, 1, 15, 15, 15);</code><br><em>反例：</em> <code>Box.shape(1.0F, 1.0F, 1.0F, 15.0F, 15.0F, 15.0F);</code></p></li><li><p><strong>【推荐】</strong> 如果变量值仅在一个有限且大小可枚举的固定范围内变化，使用枚举类型定义。</p></li></ol><h2 id="代码格式" tabindex="-1"><a class="header-anchor" href="#代码格式"><span>代码格式</span></a></h2><ol><li><p><strong>【强制】</strong> 左花括号前不换行，左花括号后换行；右花括号前换行，右花括号后如果是 else 等代码不换行，否则必须换行。</p></li><li><p><strong>【强制】</strong> 如果仅有一行代码，也应当用花括号包围。</p></li><li><p><strong>【强制】</strong> 左圆括号与其右侧的相邻字符之间不加空格，右圆括号与其左侧的相邻字符之间不加空格；右圆括号和左花括号之间要加空格。</p></li><li><p><strong>【强制】</strong> Java 语言中用于执行控制的保留字（如 if / for / while / switch / do）与左右圆括号之间都必须加空格。</p></li><li><p><strong>【强制】</strong> 任何二目、三目运算符的左右两侧都要加一个空格。</p></li><li><p><strong>【强制】</strong> 采用四个空格缩进，禁止使用 Tab 字符缩进。</p></li></ol>',8)),i(`
## 项目源代码组织结构
`)])}const p=o(n,[["render",c],["__file","coding-spec.html.vue"]]),m=JSON.parse('{"path":"/dev/coding-spec.html","title":"代码规范","lang":"zh-CN","frontmatter":{"description":"代码规范 为规范模组开发过程，编制此文档。 2023 年 12 月 20 日修订。 命名风格 【强制】 所有代码中的命名应当使用英文，除了一些专有名词没有英文对应翻译的。 正例： QingGui（青珪，一种上尖下方的玉质礼器） 反例： ModWuPin（模组物品） 【强制】 所有的类命均使用 PascalCase（又称大驼峰、CapitalCamelC...","head":[["meta",{"property":"og:url","content":"https://docs.sino.moegirl.games/dev/coding-spec.html"}],["meta",{"property":"og:site_name","content":"华夏工艺文档"}],["meta",{"property":"og:title","content":"代码规范"}],["meta",{"property":"og:description","content":"代码规范 为规范模组开发过程，编制此文档。 2023 年 12 月 20 日修订。 命名风格 【强制】 所有代码中的命名应当使用英文，除了一些专有名词没有英文对应翻译的。 正例： QingGui（青珪，一种上尖下方的玉质礼器） 反例： ModWuPin（模组物品） 【强制】 所有的类命均使用 PascalCase（又称大驼峰、CapitalCamelC..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-07T12:28:57.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-07T12:28:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"代码规范\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-07T12:28:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"华夏工艺项目组\\",\\"url\\":\\"https://github.com/SinoCraftProject\\"}]}"]]},"headers":[{"level":2,"title":"命名风格","slug":"命名风格","link":"#命名风格","children":[]},{"level":2,"title":"常量定义","slug":"常量定义","link":"#常量定义","children":[]},{"level":2,"title":"代码格式","slug":"代码格式","link":"#代码格式","children":[]}],"git":{"createdTime":1703035429000,"updatedTime":1733574537000,"contributors":[{"name":"秋雨落","username":"秋雨落","email":"i@rain.cx","commits":2,"url":"https://github.com/秋雨落"}]},"readingTime":{"minutes":3.87,"words":1162},"filePathRelative":"dev/coding-spec.md","localizedDate":"2023年12月20日","autoDesc":true}');export{p as comp,m as data};
